package dto

import (
	"time"

	"$MODULENAME$/data"
)

type $SERVICENAME$DTO struct {
	Title string `json:"title" validate:"required,min=2"`
}

type $SERVICENAME$ResponseDTO struct {
	ID 				int 			`json:"id"`
	Title 		string 		`json:"title"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type $SERVICENAME$FilterDTO struct {
	Page *int `json:"page"`
	Size *int `json:"size"`
	SortByTitle    *string `json:"sort_by_title"`
}

func (dto $SERVICENAME$DTO) To$SERVICENAME$() *data.$MODELNAME$ {
	return &data.$MODELNAME${
		Title:     dto.Title,
	}
}

func To$SERVICENAME$ResponseDTO(data data.$MODELNAME$) $SERVICENAME$ResponseDTO {
	return $SERVICENAME$ResponseDTO{
		ID: data.ID,
		Title: data.Title,
		CreatedAt: data.CreatedAt,
		UpdatedAt: data.UpdatedAt,
	}
}

func To$SERVICENAME$ListResponseDTO($TABLENAME$ []*data.$MODELNAME$) []$SERVICENAME$ResponseDTO {
	dtoList := make([]$SERVICENAME$ResponseDTO, len($TABLENAME$))
	for i, x := range $TABLENAME$ {
		dtoList[i] = To$SERVICENAME$ResponseDTO(*x)
	}
	return dtoList
}

