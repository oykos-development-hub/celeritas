package dto

import (
	"time"

	"$MODULENAME$/data"
)

type Create$SERVICENAME$DTO struct {
	Title string `json:"title" validate:"required,min=2"`
}

type Update$SERVICENAME$DTO struct {
	Title string `json:"title" validate:"omitempty,min=2"`
}


type $SERVICENAME$ResponseDTO struct {
	Title string `json:"title"`
	CreatedAt time.Time `json:"-"`
	UpdatedAt time.Time `json:"-"`
}

func (dto Create$SERVICENAME$DTO) To$SERVICENAME$() *data.$MODELNAME$ {
	return &data.$MODELNAME${
		Title:     dto.Title,
		CreatedAt: time.Now(),
		UpdatedAt: time.Now(),
	}
}

func (dto Update$SERVICENAME$DTO) To$SERVICENAME$(data *data.$MODELNAME$) {
		data.UpdatedAt = time.Now()
}

func To$SERVICENAME$ResponseDTO(data data.$MODELNAME$) $SERVICENAME$ResponseDTO {
	return $SERVICENAME$ResponseDTO{
		Title: data.Title,
		CreatedAt: data.CreatedAt,
		UpdatedAt: data.UpdatedAt,
	}
}

func To$SERVICENAME$ListResponseDTO($TABLENAME$ []*data.$MODELNAME$) []$SERVICENAME$ResponseDTO {
	dtoList := make([]$SERVICENAME$ResponseDTO, len($TABLENAME$))
	for i, x := range $TABLENAME$ {
		dtoList[i] = To$SERVICENAME$ResponseDTO(*x)
	}
	return dtoList
}

